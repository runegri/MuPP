// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.1
//

namespace AtB
{

/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="UserServicesSoap", Namespace="http://miz.it/infotransit")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UserServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback addNewUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback editUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTokenOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUserFavouritePlacesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUserRealTimeForecastOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBusStopsListOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddUserFavouriteBusStopOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteUserFavouriteBusStopOperationCompleted;
    
    public UserServices() {
        this.Url = "http://195.0.188.74/InfoTransit/userservices.asmx";
    }
    
    public event addNewUserCompletedEventHandler addNewUserCompleted;
    
    public event editUserCompletedEventHandler editUserCompleted;
    
    public event deleteUserCompletedEventHandler deleteUserCompleted;
    
    public event getTokenCompletedEventHandler getTokenCompleted;
    
    public event getUserFavouritePlacesCompletedEventHandler getUserFavouritePlacesCompleted;
    
    public event getUserRealTimeForecastCompletedEventHandler getUserRealTimeForecastCompleted;
    
    public event GetBusStopsListCompletedEventHandler GetBusStopsListCompleted;
    
    public event AddUserFavouriteBusStopCompletedEventHandler AddUserFavouriteBusStopCompleted;
    
    public event DeleteUserFavouriteBusStopCompletedEventHandler DeleteUserFavouriteBusStopCompleted;
    
    /// <remarks>
///Add new user. Returns token related to userIdentifier. HandShake object contains also 'the corret ending/not correct ending' of operation.
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/addNewUser", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public HandShake addNewUser(WsAuthentication auth, string userIdentifier, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement) {
        object[] results = this.Invoke("addNewUser", new object[] {
                    auth,
                    userIdentifier,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement});
        return ((HandShake)(results[0]));
    }
    
    public System.IAsyncResult BeginaddNewUser(WsAuthentication auth, string userIdentifier, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addNewUser", new object[] {
                    auth,
                    userIdentifier,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement}, callback, asyncState);
    }
    
    public HandShake EndaddNewUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HandShake)(results[0]));
    }
    
    public void addNewUserAsync(WsAuthentication auth, string userIdentifier, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement) {
        this.addNewUserAsync(auth, userIdentifier, name, phoneNumber, assistanceRequired, elapseTimeAnnouncement, numberAnnouncement, null);
    }
    
    public void addNewUserAsync(WsAuthentication auth, string userIdentifier, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement, object userState) {
        if ((this.addNewUserOperationCompleted == null)) {
            this.addNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewUserCompleted);
        }
        this.InvokeAsync("addNewUser", new object[] {
                    auth,
                    userIdentifier,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement}, this.addNewUserOperationCompleted, userState);
    }
    
    private void OnaddNewUserCompleted(object arg) {
        if ((this.addNewUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addNewUserCompleted(this, new addNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Edit user. Returns the result of operation.
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/editUser", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public ResponseOperation editUser(WsAuthentication auth, HandShake handShakeUser, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement) {
        object[] results = this.Invoke("editUser", new object[] {
                    auth,
                    handShakeUser,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement});
        return ((ResponseOperation)(results[0]));
    }
    
    public System.IAsyncResult BegineditUser(WsAuthentication auth, HandShake handShakeUser, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("editUser", new object[] {
                    auth,
                    handShakeUser,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement}, callback, asyncState);
    }
    
    public ResponseOperation EndeditUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResponseOperation)(results[0]));
    }
    
    public void editUserAsync(WsAuthentication auth, HandShake handShakeUser, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement) {
        this.editUserAsync(auth, handShakeUser, name, phoneNumber, assistanceRequired, elapseTimeAnnouncement, numberAnnouncement, null);
    }
    
    public void editUserAsync(WsAuthentication auth, HandShake handShakeUser, string name, string phoneNumber, bool assistanceRequired, int elapseTimeAnnouncement, int numberAnnouncement, object userState) {
        if ((this.editUserOperationCompleted == null)) {
            this.editUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditUserCompleted);
        }
        this.InvokeAsync("editUser", new object[] {
                    auth,
                    handShakeUser,
                    name,
                    phoneNumber,
                    assistanceRequired,
                    elapseTimeAnnouncement,
                    numberAnnouncement}, this.editUserOperationCompleted, userState);
    }
    
    private void OneditUserCompleted(object arg) {
        if ((this.editUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.editUserCompleted(this, new editUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Delete user. Returns the result of operation.
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/deleteUser", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public ResponseOperation deleteUser(WsAuthentication auth, HandShake handShakeUser) {
        object[] results = this.Invoke("deleteUser", new object[] {
                    auth,
                    handShakeUser});
        return ((ResponseOperation)(results[0]));
    }
    
    public System.IAsyncResult BegindeleteUser(WsAuthentication auth, HandShake handShakeUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteUser", new object[] {
                    auth,
                    handShakeUser}, callback, asyncState);
    }
    
    public ResponseOperation EnddeleteUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResponseOperation)(results[0]));
    }
    
    public void deleteUserAsync(WsAuthentication auth, HandShake handShakeUser) {
        this.deleteUserAsync(auth, handShakeUser, null);
    }
    
    public void deleteUserAsync(WsAuthentication auth, HandShake handShakeUser, object userState) {
        if ((this.deleteUserOperationCompleted == null)) {
            this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserCompleted);
        }
        this.InvokeAsync("deleteUser", new object[] {
                    auth,
                    handShakeUser}, this.deleteUserOperationCompleted, userState);
    }
    
    private void OndeleteUserCompleted(object arg) {
        if ((this.deleteUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Returns token related to userIdentifier.
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/getToken", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public HandShake getToken(WsAuthentication auth, string userIdentifier) {
        object[] results = this.Invoke("getToken", new object[] {
                    auth,
                    userIdentifier});
        return ((HandShake)(results[0]));
    }
    
    public System.IAsyncResult BegingetToken(WsAuthentication auth, string userIdentifier, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getToken", new object[] {
                    auth,
                    userIdentifier}, callback, asyncState);
    }
    
    public HandShake EndgetToken(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HandShake)(results[0]));
    }
    
    public void getTokenAsync(WsAuthentication auth, string userIdentifier) {
        this.getTokenAsync(auth, userIdentifier, null);
    }
    
    public void getTokenAsync(WsAuthentication auth, string userIdentifier, object userState) {
        if ((this.getTokenOperationCompleted == null)) {
            this.getTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTokenCompleted);
        }
        this.InvokeAsync("getToken", new object[] {
                    auth,
                    userIdentifier}, this.getTokenOperationCompleted, userState);
    }
    
    private void OngetTokenCompleted(object arg) {
        if ((this.getTokenCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTokenCompleted(this, new getTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/getUserFavouritePlaces", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public PrefObject[] getUserFavouritePlaces(WsAuthentication auth, HandShake handShakeUser) {
        object[] results = this.Invoke("getUserFavouritePlaces", new object[] {
                    auth,
                    handShakeUser});
        return ((PrefObject[])(results[0]));
    }
    
    public System.IAsyncResult BegingetUserFavouritePlaces(WsAuthentication auth, HandShake handShakeUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUserFavouritePlaces", new object[] {
                    auth,
                    handShakeUser}, callback, asyncState);
    }
    
    public PrefObject[] EndgetUserFavouritePlaces(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PrefObject[])(results[0]));
    }
    
    public void getUserFavouritePlacesAsync(WsAuthentication auth, HandShake handShakeUser) {
        this.getUserFavouritePlacesAsync(auth, handShakeUser, null);
    }
    
    public void getUserFavouritePlacesAsync(WsAuthentication auth, HandShake handShakeUser, object userState) {
        if ((this.getUserFavouritePlacesOperationCompleted == null)) {
            this.getUserFavouritePlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserFavouritePlacesCompleted);
        }
        this.InvokeAsync("getUserFavouritePlaces", new object[] {
                    auth,
                    handShakeUser}, this.getUserFavouritePlacesOperationCompleted, userState);
    }
    
    private void OngetUserFavouritePlacesCompleted(object arg) {
        if ((this.getUserFavouritePlacesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUserFavouritePlacesCompleted(this, new getUserFavouritePlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Return forecast in json format
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/getUserRealTimeForecast", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string getUserRealTimeForecast(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        object[] results = this.Invoke("getUserRealTimeForecast", new object[] {
                    auth,
                    handShakeUser,
                    busStopId});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BegingetUserRealTimeForecast(WsAuthentication auth, HandShake handShakeUser, string busStopId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUserRealTimeForecast", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, callback, asyncState);
    }
    
    public string EndgetUserRealTimeForecast(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void getUserRealTimeForecastAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        this.getUserRealTimeForecastAsync(auth, handShakeUser, busStopId, null);
    }
    
    public void getUserRealTimeForecastAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId, object userState) {
        if ((this.getUserRealTimeForecastOperationCompleted == null)) {
            this.getUserRealTimeForecastOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRealTimeForecastCompleted);
        }
        this.InvokeAsync("getUserRealTimeForecast", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, this.getUserRealTimeForecastOperationCompleted, userState);
    }
    
    private void OngetUserRealTimeForecastCompleted(object arg) {
        if ((this.getUserRealTimeForecastCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUserRealTimeForecastCompleted(this, new getUserRealTimeForecastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Return list of bus stop
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/GetBusStopsList", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string GetBusStopsList(WsAuthentication auth) {
        object[] results = this.Invoke("GetBusStopsList", new object[] {
                    auth});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginGetBusStopsList(WsAuthentication auth, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBusStopsList", new object[] {
                    auth}, callback, asyncState);
    }
    
    public string EndGetBusStopsList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void GetBusStopsListAsync(WsAuthentication auth) {
        this.GetBusStopsListAsync(auth, null);
    }
    
    public void GetBusStopsListAsync(WsAuthentication auth, object userState) {
        if ((this.GetBusStopsListOperationCompleted == null)) {
            this.GetBusStopsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusStopsListCompleted);
        }
        this.InvokeAsync("GetBusStopsList", new object[] {
                    auth}, this.GetBusStopsListOperationCompleted, userState);
    }
    
    private void OnGetBusStopsListCompleted(object arg) {
        if ((this.GetBusStopsListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBusStopsListCompleted(this, new GetBusStopsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Add favoute bus stop
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/AddUserFavouriteBusStop", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public ResponseOperation AddUserFavouriteBusStop(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        object[] results = this.Invoke("AddUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId});
        return ((ResponseOperation)(results[0]));
    }
    
    public System.IAsyncResult BeginAddUserFavouriteBusStop(WsAuthentication auth, HandShake handShakeUser, string busStopId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, callback, asyncState);
    }
    
    public ResponseOperation EndAddUserFavouriteBusStop(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResponseOperation)(results[0]));
    }
    
    public void AddUserFavouriteBusStopAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        this.AddUserFavouriteBusStopAsync(auth, handShakeUser, busStopId, null);
    }
    
    public void AddUserFavouriteBusStopAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId, object userState) {
        if ((this.AddUserFavouriteBusStopOperationCompleted == null)) {
            this.AddUserFavouriteBusStopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserFavouriteBusStopCompleted);
        }
        this.InvokeAsync("AddUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, this.AddUserFavouriteBusStopOperationCompleted, userState);
    }
    
    private void OnAddUserFavouriteBusStopCompleted(object arg) {
        if ((this.AddUserFavouriteBusStopCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddUserFavouriteBusStopCompleted(this, new AddUserFavouriteBusStopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///Add favoute bus stop
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://miz.it/infotransit/DeleteUserFavouriteBusStop", RequestNamespace="http://miz.it/infotransit", ResponseNamespace="http://miz.it/infotransit", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public ResponseOperation DeleteUserFavouriteBusStop(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        object[] results = this.Invoke("DeleteUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId});
        return ((ResponseOperation)(results[0]));
    }
    
    public System.IAsyncResult BeginDeleteUserFavouriteBusStop(WsAuthentication auth, HandShake handShakeUser, string busStopId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, callback, asyncState);
    }
    
    public ResponseOperation EndDeleteUserFavouriteBusStop(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ResponseOperation)(results[0]));
    }
    
    public void DeleteUserFavouriteBusStopAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId) {
        this.DeleteUserFavouriteBusStopAsync(auth, handShakeUser, busStopId, null);
    }
    
    public void DeleteUserFavouriteBusStopAsync(WsAuthentication auth, HandShake handShakeUser, string busStopId, object userState) {
        if ((this.DeleteUserFavouriteBusStopOperationCompleted == null)) {
            this.DeleteUserFavouriteBusStopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserFavouriteBusStopCompleted);
        }
        this.InvokeAsync("DeleteUserFavouriteBusStop", new object[] {
                    auth,
                    handShakeUser,
                    busStopId}, this.DeleteUserFavouriteBusStopOperationCompleted, userState);
    }
    
    private void OnDeleteUserFavouriteBusStopCompleted(object arg) {
        if ((this.DeleteUserFavouriteBusStopCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteUserFavouriteBusStopCompleted(this, new DeleteUserFavouriteBusStopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://miz.it/infotransit")]
public partial class WsAuthentication {
    
    private string userField;
    
    private string passwordField;
    
    /// <remarks/>
    public string user {
        get {
            return this.userField;
        }
        set {
            this.userField = value;
        }
    }
    
    /// <remarks/>
    public string password {
        get {
            return this.passwordField;
        }
        set {
            this.passwordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://miz.it/infotransit")]
public partial class HandShake {
    
    private string userIdentifierField;
    
    private string tokenField;
    
    private ResponseOperation responseField;
    
    /// <remarks/>
    public string userIdentifier {
        get {
            return this.userIdentifierField;
        }
        set {
            this.userIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string token {
        get {
            return this.tokenField;
        }
        set {
            this.tokenField = value;
        }
    }
    
    /// <remarks/>
    public ResponseOperation response {
        get {
            return this.responseField;
        }
        set {
            this.responseField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://miz.it/infotransit")]
public enum ResponseOperation {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    GenericError,
    
    /// <remarks/>
    NotValidToken,
    
    /// <remarks/>
    NoExistingUser,
    
    /// <remarks/>
    WsAuthenticationError,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://miz.it/infotransit")]
public partial class PrefObject {
    
    private string nameField2;
    
    private int idAzField;
    
    private string stopCodeField;
    
    private string addressField;
    
    private TypePref m_tPrefField;
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField2;
        }
        set {
            this.nameField2 = value;
        }
    }
    
    /// <remarks/>
    public int idAz {
        get {
            return this.idAzField;
        }
        set {
            this.idAzField = value;
        }
    }
    
    /// <remarks/>
    public string stopCode {
        get {
            return this.stopCodeField;
        }
        set {
            this.stopCodeField = value;
        }
    }
    
    /// <remarks/>
    public string address {
        get {
            return this.addressField;
        }
        set {
            this.addressField = value;
        }
    }
    
    /// <remarks/>
    public TypePref m_tPref {
        get {
            return this.m_tPrefField;
        }
        set {
            this.m_tPrefField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://miz.it/infotransit")]
public enum TypePref {
    
    /// <remarks/>
    prefPoint,
    
    /// <remarks/>
    prefStop,
    
    /// <remarks/>
    reminder,
}

public partial class addNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public HandShake Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((HandShake)(this.results[0]));
        }
    }
}

public delegate void addNewUserCompletedEventHandler(object sender, addNewUserCompletedEventArgs args);

public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public ResponseOperation Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResponseOperation)(this.results[0]));
        }
    }
}

public delegate void editUserCompletedEventHandler(object sender, editUserCompletedEventArgs args);

public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public ResponseOperation Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResponseOperation)(this.results[0]));
        }
    }
}

public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs args);

public partial class getTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public HandShake Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((HandShake)(this.results[0]));
        }
    }
}

public delegate void getTokenCompletedEventHandler(object sender, getTokenCompletedEventArgs args);

public partial class getUserFavouritePlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUserFavouritePlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public PrefObject[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PrefObject[])(this.results[0]));
        }
    }
}

public delegate void getUserFavouritePlacesCompletedEventHandler(object sender, getUserFavouritePlacesCompletedEventArgs args);

public partial class getUserRealTimeForecastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUserRealTimeForecastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void getUserRealTimeForecastCompletedEventHandler(object sender, getUserRealTimeForecastCompletedEventArgs args);

public partial class GetBusStopsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBusStopsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void GetBusStopsListCompletedEventHandler(object sender, GetBusStopsListCompletedEventArgs args);

public partial class AddUserFavouriteBusStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddUserFavouriteBusStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public ResponseOperation Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResponseOperation)(this.results[0]));
        }
    }
}

public delegate void AddUserFavouriteBusStopCompletedEventHandler(object sender, AddUserFavouriteBusStopCompletedEventArgs args);

public partial class DeleteUserFavouriteBusStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteUserFavouriteBusStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public ResponseOperation Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ResponseOperation)(this.results[0]));
        }
    }
}

public delegate void DeleteUserFavouriteBusStopCompletedEventHandler(object sender, DeleteUserFavouriteBusStopCompletedEventArgs args);

}
